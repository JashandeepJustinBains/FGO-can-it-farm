name: export-servants-dump

on:
  workflow_dispatch:

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pymongo==4.*

      - name: Export servants collection to JSON
        env:
          MONGO_URI_READ: ${{ secrets.MONGO_URI_READ }}
        run: |
          python - <<'PY'
          import os, json, sys
          from pymongo import MongoClient
          from bson import json_util

          uri = os.environ.get('MONGO_URI_READ') or os.environ.get('SERVANTS_READONLY_URI')
          if not uri:
              print('ERROR: MONGO_URI_READ not set', file=sys.stderr)
              sys.exit(2)

          client = MongoClient(uri, serverSelectionTimeoutMS=15000)
          dbs = []
          try:
              for dbname in client.list_database_names():
                  try:
                      if 'servants' in client[dbname].list_collection_names():
                          dbs.append(dbname)
                  except Exception:
                      continue
          except Exception as e:
              print(json.dumps({'error': str(e)}))
              sys.exit(3)

          if not dbs:
              print('ERROR: no db with servants collection found', file=sys.stderr)
              sys.exit(4)

          dbname = dbs[0]
          coll = client[dbname]['servants']
          out_file = 'servants_dump.json'
          written = 0
          with open(out_file, 'w', encoding='utf-8') as f:
              f.write('[')
              first = True
              for doc in coll.find({}, batch_size=200):
                  if not first:
                      f.write(',\n')
                  f.write(json.dumps(doc, default=json_util.default))
                  first = False
                  written += 1
          print('WROTE_DOCS:', written)

      - name: Compress dump
        run: |
          gzip -f servants_dump.json

      - name: Upload servants dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: servants-dump
          path: servants_dump.json.gz

      - name: Print summary
        run: |
          echo "Artifact servants-dump uploaded (servants_dump.json.gz)."
          echo "Download from the Actions run page or use the 'gh' CLI to download artifacts."
