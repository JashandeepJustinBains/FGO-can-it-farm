I am trying to create a combat simulator to do a mathematical analysis on the mobile game FGO, I have all the characters stats and skills in a mongodb database and all the difficult quest saved. I know the game mechanics but I do not want to input the optimal skill usage or team compositions because I do not have the time and there are just so many things to account for. I am using python and I want to create a simulation of the game and I am having trouble thinking of ways to implement the game mechanics and grab the skills of the current team composition, implement buff counters and damage number and energy gain. I have mulitple classes and I want you to change them so they work together. I would like to create a UI for this that allows upto 6 characters to be chosen but I am unsure what UI tool to use. I ultimately want to utilize this on the web maybe in a personal github webpage, how can I do this?

I can give you a 2 skills as examples and what each part means can that help you create a more robust machine learning model? 
{'name': 'Mahamaya EX', 'cooldown': 6,
    'functions': [
        {'funcType': 'gainNp', 'funcTargetType': 'self', 'svals': {'Rate': 1000, 'Value': 5000}, 'buffs': []}, 
        {'funcType': 'hastenNpturn', 'funcTargetType': 'self', 'svals': {'Rate': 1000, 'Value': 1}, 'buffs': []}, 
        {'funcType': 'addStateShort', 'funcTargetType': 'ptAll', 'svals': {'Rate': 1000, 'Turn': 3, 'Count': 1, 'Value': 1}, 'buffs': [{'name': 'Overcharge Lv. Up', 'svals': None}]
        }
    ]
}
The skill "Mahamaya EX" has a cooldown of 6 and each "funcType" is what it applies to enemies or allies. In this case the first funcType is "gainNp" on the "funcTargetType": "self" with values "Rate":1000 and "value":5000. Rate in this case means the probability of applying it is 10 which is the maximum meaning it is always applied, the value is 50% np increase, these effects only apply to this character. 
the next funcType is "hastenNpturn" which only applies if the unit is on the enemy team so we will not be including it.
the next funcType is "addStateShort" meaning it will apply a "state" (buff) to "funcTargetType": "ptAll" (entire party/team), the "svals" mean it will be applied at the maximum rate of 10 (always) for 3 turns so it will be gone after 3 turns or 1 use that is because the "count" is 1 so after 1 use it will be depleted, as for "buffs" it will apply the buff "Overcharge Lv. Up" which means that when an ally uses their Ultimate (Called Noble Phantasm or NP) (the only ability that can use up this type of buff) it will increase the overcharge of it. This applies seperatly for each party member

{'name': 'The Unapproachable One A', 'cooldown': 6,
    'functions': [
        {'funcType': 'addState', 'funcTargetType': 'self', 'svals': {'Rate': 1000, 'Turn': 3, 'Count': 3}, 'buffs': [{'name': 'Invincible', 'svals': None}]}, 
        {'funcType': 'addStateShort', 'funcTargetType': 'self', 'svals': {'Rate': 1000, 'Turn': 3, 'Count': -1, 'Value': 200}, 'buffs': [{'name': 'Quick Up', 'svals': None}]}, 
        {'funcType': 'addStateShort', 'funcTargetType': 'self', 'svals': {'Rate': 1000, 'Turn': 3, 'Count': -1, 'Value': 200}, 'buffs': [{'name': 'Arts Up', 'svals': None}]}, 
        {'funcType': 'addStateShort', 'funcTargetType': 'self', 'svals': {'Rate': 1000, 'Turn': 3, 'Count': -1, 'Value': 200}, 'buffs': [{'name': 'Buster Up', 'svals': None}]}]}
The Skill "The unapproabhable One A" has 4 funcTypes
1. addState at Rate of 10 (guarenteed) to gain invincible buff on self for 3 turns that takes 3 hits to deplete, so whatever happens first 3 turns completed or 3 hits taken then the buff will be gone
for 2 3 and 4 they are addStateShort on self at guarenteed rate for 3 turns and after 3 turns the buffs will be gone, 2 increases "Quick" efficiency by 20%, 3 increases "Arts" efficiency by 20% and 4 increases "Buster" efficiency by 20% 